int sensor1 = 0;
 int sensor2 = 0;
 
+int LUZ1 = 2;
+int LUZ2 = 3;
+
+
 void setup()
 {
   Serial.begin(9600);
 @@ -35,6 +39,13 @@ void setup()
   Serial.print(Ethernet.localIP());
   server.begin();
   
+  pinMode(LUZ1, OUTPUT);
+  pinMode(LUZ2, OUTPUT);
+  digitalWrite(LUZ1, HIGH);
+  digitalWrite(LUZ2, HIGH);
+  
+  
+  
 }
 void loop()
 {
 @@ -56,19 +67,40 @@ void loop()
           // IMPORTANTE, ISSO FAZ O ARDUINO RECEBER REQUISIÇÃO AJAX DE OUTRO SERVIDOR E NÃO APENAS LOCAL.
           client.println("Content-Type: text/javascript");
           client.println("Access-Control-Allow-Origin: *");
-          client.println();
-          
-          sensor1 = analogRead(analogPin1);
-          sensor2 = analogRead(analogPin2);
-          
-          client.print("dados({ sensor1 : ");
-          client.print(sensor1);
-          client.print(", sensor2 :  ");
-          client.print(sensor2);
-          client.print(" }) ");
-          
+          client.println();          
          
-          client.stop();
+          int iniciofrente = linha.indexOf("?");
+                
+          if(iniciofrente>-1){     //verifica se o comando veio
+            iniciofrente     = iniciofrente+6; //pega o caractere seguinte
+            int fimfrente    = iniciofrente+3; //esse comando espero 3 caracteres
+            String acao    = linha.substring(iniciofrente,fimfrente);//recupero o valor do comando
+            
+ 
+            if      ( acao == "001"){ digitalWrite(LUZ1, LOW); } 
+            else if ( acao == "002"){ digitalWrite(LUZ1, HIGH);} 
+            
+            else if ( acao == "003"){ digitalWrite(LUZ2, LOW); }
+            else if ( acao == "004"){ digitalWrite(LUZ2, HIGH); }
+            else {}
+            
+            sensor1 = analogRead(analogPin1);
+            sensor2 = analogRead(analogPin2);
+            
+            client.print("dados({ sensor1 : ");
+            client.print(sensor1);
+            client.print(", sensor2 :  ");
+            client.print(sensor2);
+            client.print(",");
+            client.print(" LUZ1 : ");
+            client.print(digitalRead(LUZ1));
+            client.print(",");
+            client.print(" LUZ2 : ");
+            client.print(digitalRead(LUZ2));
+            client.print("})");
+            
+         }          
+          break;
         }
         if(c == '\n') { continua = true; }
         else if (c != '\r') { continua = false; }
View 105  HTML/index.html
 @@ -10,7 +10,6 @@
 		<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css">
 		<script src="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
 		<script type="text/javascript" src="https://www.google.com/jsapi"></script>
-
 		<style type="text/css">
 			.clean { padding: 0; margin: 0;}
 		</style>
 @@ -24,7 +23,6 @@
 	</div>
 	<div class="row">
 		<div class="col-md-3 well">
-			
 			<p>
 				Lendo dois sensores no arduino. confira o codigo no github: <a href="https://github.com/rogerin/ArduinoComAjax">rogerin</a> <br/>
 				Projeto sem uma boa interface grafica, pois não é o foco dessa demonstração.
 @@ -33,52 +31,89 @@
 				Status: <span id="status" class="label"></span>
 			</p>
 			<p>
-				<h3>Sensor 1</h3>
+				<h4>Sensor 1</h4>
 				Valor: <strong><span id="sensor1" ></span></strong>
 			</p>
 			<p>
-				<h3>Sensor 2</h3>
+				<h4>Sensor 2</h4>
 				Valor: <strong><span id="sensor2"></span></strong>
 			</p>
-
-			
+			<p>
+				<h4>Botões</h4>
+				Botão 1:
+				<div class="btn-group">
+				  <button type="button" class="btn btn-default botaoEnvia" id="001">Liga</button>
+				  <button type="button" class="btn btn-default botaoEnvia" id="002">Desliga</button>
+				</div>
+				<span id="resultLUZ1"></span>
+				<br/>
+				Botão 2:
+				<div class="btn-group">
+				  <button type="button" class="btn btn-default botaoEnvia" id="003">Liga</button>
+				  <button type="button" class="btn btn-default botaoEnvia" id="004">Desliga</button>
+				</div>
+				<span id="resultLUZ2"></span>
+			</p>	
 		</div>
-
 		<div class="col-md-9">
 			<div class="clean" id="chart_div" style="width: 100%; height: 500px;"></div>
 		</div>
 	</div>
-
-
 	<div class="row">
 		<p>Github: <a href="https://github.com/rogerin/ArduinoComAjax">rogerin</a> </p>
 	</div>
-
-
-
 </div>
 
 <script type="text/javascript">
-
 //var url = 'http://177.177.165.14:50';
 var url = 'http://192.168.1.100:1000';
 
+google.load("visualization", "1", {packages:["corechart"]});
+google.setOnLoadCallback(drawChart);
+	var data; 
+	var chart;
+	var options = {
+		title: 'Dados dos Sensores ArduinoComAjax',
+		curveType: 'function'
+	};
 
-	  google.load("visualization", "1", {packages:["corechart"]});
-      google.setOnLoadCallback(drawChart);
-        var rowArray = [[1,10,20],[2,49,644]];
-		var data; 
-		var chart;
-		var options = {
-          title: 'Dados dos Sensores ArduinoComAjax',
-          curveType: 'function'
-        };
-
-      
 $(document).ready(function(){
-     var i = 0; 
+	$('.botaoEnvia').click(function(){
+        var valor = $(this).attr('id');
+        enviaDados(valor);
+    });
+	
+	function enviaDados(dado){		
+    	$.ajax({
+		    url: url,
+		    data: { 'acao': dado},
+		    dataType: 'jsonp',
+		    crossDomain: true,
+		    jsonp: false,
+		    jsonpCallback: 'dados',
+		    success: function(data,status,xhr) {
+				// posso ler dados e retoranar na pagina para avisar se a luz ta ligada ou desligada.
+				console.log(data.LUZ1);
+				console.log(data.LUZ2);
+				$('#resultLUZ1').text(statusReturn(data.LUZ1)); 
+				$('#resultLUZ2').text(statusReturn(data.LUZ2));
+		    }
+		  });
+        return false;
+    }
+
+    function statusReturn (valor) {
+    	if(valor == 0) {
+    		return "Ligada";
+    	}
+    	else if(valor == 1) {
+    		return "Desligada";
+    	}
+    	 else { return "Desconhecido";}
+    }
+
+    var i = 0;
 	function fazerRequisicao(){
-		
 		$('#status').removeClass('label-success').addClass('label-warning');
 		$('#status').text("Enviando Requisição...");
     	$.ajax({
 @@ -93,6 +128,8 @@
 				$('#status').text("Requisição Recebida!");
 				$('#sensor1').text(data.sensor1);
 				$('#sensor2').text(data.sensor2);
+				$('#resultLUZ1').text(statusReturn(data.LUZ1));
+				$('#resultLUZ2').text(statusReturn(data.LUZ2));
 				i++;
 				setGrafico(i,data.sensor1,data.sensor2);
 				console.log(data);
 @@ -102,26 +139,25 @@
     }
 
     // A cada 1000 milis (1 segundo), faça uma nova requisição.
-    setInterval(fazerRequisicao, 300);
+    setInterval(fazerRequisicao, 500);
   	// Acredito que 3000 (3 segundos) ou mais seja o ideal para um serviço online.
   	// Caso use local host, arrisco colocar ate 400 milis, você tera uma boa resposta. 
-
 });
 
-      function drawChart() {
+	function drawChart() {
   		data = new google.visualization.DataTable();
 		data.addColumn('number', 'Registro'); // Implicit domain column.
 		data.addColumn('number', 'Sensor1'); // Implicit data column.
 		data.addColumn('number', 'Sensor2'); // Implicit data column.
 		data.addRow();
-      }
+    }
 
-      function setGrafico(i, sensor1,sensor2){
+	function setGrafico(i, sensor1,sensor2){
 		data.addRow([i,sensor1,sensor2]);
         chart = new google.visualization.LineChart(document.getElementById('chart_div'));
         chart.draw(data, options);
         return false;
-      }
+	}
   
 </script>
 
 @@ -131,11 +167,6 @@
 
 
 
-
-
-
-
-
 <!--
 <?php
     //Criando a url para o aquivo json
